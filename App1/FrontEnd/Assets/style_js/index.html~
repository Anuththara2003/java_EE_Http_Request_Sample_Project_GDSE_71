<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Event Manager Pro</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .header {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            padding: 30px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .header::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
            animation: rotate 20s linear infinite;
        }

        @keyframes rotate {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .header h1 {
            color: white;
            font-size: 2.5rem;
            font-weight: 300;
            margin-bottom: 10px;
            position: relative;
            z-index: 1;
        }

        .header p {
            color: rgba(255, 255, 255, 0.9);
            font-size: 1.1rem;
            position: relative;
            z-index: 1;
        }

        .content {
            padding: 40px;
        }

        .form-section {
            background: white;
            padding: 30px;
            border-radius: 15px;
            margin-bottom: 30px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .form-section:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        }

        .section-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: #333;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .section-title::before {
            content: '';
            width: 4px;
            height: 24px;
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            border-radius: 2px;
        }

        .form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 25px;
        }

        .input-group {
            position: relative;
        }

        .input-group input {
            width: 100%;
            padding: 15px 20px;
            border: 2px solid #e1e5e9;
            border-radius: 12px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: #f8f9fa;
        }

        .input-group input:focus {
            outline: none;
            border-color: #4facfe;
            background: white;
            box-shadow: 0 0 0 3px rgba(79, 172, 254, 0.1);
            transform: translateY(-2px);
        }

        .input-group label {
            position: absolute;
            top: -8px;
            left: 15px;
            background: white;
            padding: 0 8px;
            font-size: 0.85rem;
            font-weight: 500;
            color: #666;
            transition: all 0.3s ease;
        }

        .button-group {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 25px;
            font-size: 1rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s;
        }

        .btn:hover::before {
            left: 100%;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
        }

        .btn-success {
            background: linear-gradient(135deg, #56ab2f 0%, #a8e6cf 100%);
            color: white;
        }

        .btn-success:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(86, 171, 47, 0.3);
        }

        .btn-danger {
            background: linear-gradient(135deg, #ff416c 0%, #ff4b2b 100%);
            color: white;
        }

        .btn-danger:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(255, 65, 108, 0.3);
        }

        .btn-info {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            color: white;
        }

        .btn-info:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(79, 172, 254, 0.3);
        }

        .table-container {
            background: white;
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
        }

        .table-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .table-title {
            font-size: 1.3rem;
            font-weight: 600;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th {
            background: #f8f9fa;
            padding: 15px;
            text-align: left;
            font-weight: 600;
            color: #333;
            border-bottom: 2px solid #e1e5e9;
        }

        td {
            padding: 15px;
            border-bottom: 1px solid #e1e5e9;
            transition: all 0.3s ease;
        }

        tbody tr {
            transition: all 0.3s ease;
        }

        tbody tr:hover {
            background: linear-gradient(135deg, rgba(79, 172, 254, 0.05) 0%, rgba(0, 242, 254, 0.05) 100%);
            transform: scale(1.01);
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #666;
        }

        .empty-state-icon {
            font-size: 4rem;
            margin-bottom: 20px;
            opacity: 0.3;
        }

        .loading {
            display: none;
            text-align: center;
            padding: 20px;
        }

        .spinner {
            display: inline-block;
            width: 30px;
            height: 30px;
            border: 3px solid #f3f3f3;
            border-top: 3px solid #4facfe;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 10px;
            color: white;
            font-weight: 500;
            transform: translateX(400px);
            transition: transform 0.3s ease;
            z-index: 1000;
        }

        .notification.show {
            transform: translateX(0);
        }

        .notification.success {
            background: linear-gradient(135deg, #56ab2f 0%, #a8e6cf 100%);
        }

        .notification.error {
            background: linear-gradient(135deg, #ff416c 0%, #ff4b2b 100%);
        }

        @media (max-width: 768px) {
            .content {
                padding: 20px;
            }

            .header h1 {
                font-size: 2rem;
            }

            .form-grid {
                grid-template-columns: 1fr;
            }

            .button-group {
                flex-direction: column;
            }

            .btn {
                width: 100%;
            }
        }
    </style>
</head>
<body>
<div class="container">
    <div class="header">
        <h1>Event Manager Pro</h1>
        <p>Manage your events with style and efficiency</p>
    </div>

    <div class="content">
        <div class="form-section">
            <h2 class="section-title">Create / Update Event</h2>
            <div class="form-grid">
                <div class="input-group">
                    <input type="text" id="eid" placeholder=" ">
                    <label for="eid">Event ID (for update/delete)</label>
                </div>
                <div class="input-group">
                    <input type="text" id="ename" placeholder=" ">
                    <label for="ename">Event Name</label>
                </div>
                <div class="input-group">
                    <input type="text" id="edescription" placeholder=" ">
                    <label for="edescription">Description</label>
                </div>
                <div class="input-group">
                    <input type="date" id="edate" placeholder=" ">
                    <label for="edate">Date</label>
                </div>
                <div class="input-group">
                    <input type="text" id="eplace" placeholder=" ">
                    <label for="eplace">Place</label>
                </div>
            </div>
            <div class="button-group">
                <button id="createEvent" class="btn btn-primary">✨ Create Event</button>
                <button id="updateEvent" class="btn btn-success">🔄 Update Event</button>
                <button id="deleteEvent" class="btn btn-danger">🗑️ Delete Event</button>
            </div>
        </div>

        <div class="table-container">
            <div class="table-header">
                <div class="table-title">📅 All Events</div>
                <button id="getAllEvents" class="btn btn-info">🔄 Refresh</button>
            </div>
            <div class="loading" id="loading">
                <div class="spinner"></div>
                <p>Loading events...</p>
            </div>
            <table id="eventTable">
                <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Date</th>
                    <th>Place</th>
                </tr>
                </thead>
                <tbody id="event_id"></tbody>
            </table>
        </div>
    </div>
</div>

<script src="../lib/jquery-3.7.1.min.js"></script>
<script>
    const apiUrl = `http://localhost:8080/App1_Web_exploded/event`;

    function showNotification(message, type = 'success') {
        const notification = $(`
                <div class="notification ${type}">
                    ${message}
                </div>
            `);

        $('body').append(notification);

        setTimeout(() => notification.addClass('show'), 100);

        setTimeout(() => {
            notification.removeClass('show');
            setTimeout(() => notification.remove(), 300);
        }, 3000);
    }

    function showLoading(show = true) {
        if (show) {
            $('#loading').show();
            $('#eventTable').hide();
        } else {
            $('#loading').hide();
            $('#eventTable').show();
        }
    }

    function refreshTable(data) {
        const tbody = $('#eventTable tbody');
        tbody.empty();

        if (data && data.length > 0) {
            data.forEach((event, index) => {
                tbody.append(`
                        <tr style="animation-delay: ${index * 0.1}s">
                            <td><strong>${event.eid}</strong></td>
                            <td>${event.ename}</td>
                            <td>${event.edescription}</td>
                            <td>${event.edate}</td>
                            <td>📍 ${event.eplace}</td>
                        </tr>
                    `);
            });
        } else {
            tbody.append(`
                    <tr>
                        <td colspan="5">
                            <div class="empty-state">
                                <div class="empty-state-icon">📅</div>
                                <h3>No events found</h3>
                                <p>Create your first event to get started!</p>
                            </div>
                        </td>
                    </tr>
                `);
        }
    }

    function clearForm() {
        $('#eid, #ename, #edescription, #edate, #eplace').val('');
    }

    $('#getAllEvents').click(function () {
        showLoading(true);

        $.ajax({
            url: apiUrl,
            method: 'GET',
            success: function (response) {
                setTimeout(() => {
                    showLoading(false);
                    refreshTable(response);
                    showNotification('Events loaded successfully! 🎉');
                }, 500);
            },
            error: function () {
                showLoading(false);
                showNotification('Error fetching events 😞', 'error');
            }
        });
    });

    $('#createEvent').click(function () {
        const event = {
            eid: $('#eid').val(),
            ename: $('#ename').val(),
            edescription: $('#edescription').val(),
            edate: $('#edate').val(),
            eplace: $('#eplace').val()
        };

        if (!event.ename || !event.edate || !event.eplace) {
            showNotification('Please fill in all required fields! 📝', 'error');
            return;
        }

        $.ajax({
            url: apiUrl,
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(event),
            success: function (response) {
                showNotification('Event created successfully! ✨');
                clearForm();
                $('#getAllEvents').click();
            },
            error: function () {
                showNotification('Error creating event 😞', 'error');
            }
        });
    });

    $('#updateEvent').click(function () {
        const event = {
            eid: $('#eid').val(),
            ename: $('#ename').val(),
            edescription: $('#edescription').val(),
            edate: $('#edate').val(),
            eplace: $('#eplace').val()
        };

        if (!event.eid) {
            showNotification('Please enter Event ID to update! 🆔', 'error');
            return;
        }

        $.ajax({
            url: apiUrl,
            method: 'PUT',
            contentType: 'application/json',
            data: JSON.stringify(event),
            success: function (response) {
                showNotification('Event updated successfully! 🔄');
                clearForm();
                $('#getAllEvents').click();
            },
            error: function () {
                showNotification('Error updating event 😞', 'error');
            }
        });
    });

    $('#deleteEvent').click(function () {
        const eid = $('#eid').val();

        if (!eid) {
            showNotification('Please enter Event ID to delete! 🆔', 'error');
            return;
        }

        if (!confirm('Are you sure you want to delete this event? This action cannot be undone.')) {
            return;
        }

        $.ajax({
            url: apiUrl,
            method: 'DELETE',
            contentType: 'application/json',
            data: JSON.stringify({ eid }),
            success: function (response) {
                showNotification('Event deleted successfully! 🗑️');
                clearForm();
                $('#getAllEvents').click();
            },
            error: function () {
                showNotification('Error deleting event 😞', 'error');
            }
        });
    });

    // Add smooth focus animations
    $('input').on('focus', function() {
        $(this).parent().addClass('focused');
    }).on('blur', function() {
        if (!$(this).val()) {
            $(this).parent().removeClass('focused');
        }
    });


    // Load events on page load
    $(document).ready(function() {
        $('#getAllEvents').click();
    });

    $("#event_id").on('click', 'tr', function () {

        const selectedRow = $(this).children('td');

        const id = selectedRow.eq(0).text();
        const name = selectedRow.eq(1).text();
        const description = selectedRow.eq(2).text();
        const date = selectedRow.eq(3).text();
        const place = selectedRow.eq(4).text();
        //hello

        $('#eid').val(id);
        $('#ename').val(name);
        $('#edescription').val(description);
        $('#edate').val(date);
        $('#eplace').val(place);

    });

</script>
</body>
</html>